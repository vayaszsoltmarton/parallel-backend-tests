name: Build BE service - PR check

on:
  pull_request:
    branches: [master, major*, minor*]
    types: [opened, reopened, synchronize, edited]
env:
  total-runners: 5    



jobs:
  runner-indexes:
    runs-on: ubuntu-latest
    name: Generate runner indexes
    outputs:
      json: ${{ steps.generate-index-list.outputs.json }}
    steps:
      - id: generate-index-list
        run: |
          MAX_INDEX=$((${{ env.total-runners }}-1))
          INDEX_LIST=$(seq 0 ${MAX_INDEX})
          INDEX_JSON=$(jq --null-input --compact-output '. |= [inputs]' <<< ${INDEX_LIST})
          echo "::set-output name=json::${INDEX_JSON}"
          
  run-parallel-tests:
    runs-on: ubuntu-latest
    name: "Runner #${{ matrix.runner-index }}: Run test suite in parallel"
    needs:
      - runner-indexes
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}  
    steps:
      - name: Set Berlin Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Berlin"

      - name: Checkout project sources
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - uses: chaosaffe/split-tests@v1-alpha.1
        id: split-tests
        name: Split tests
        with:
          glob: parallel-backend-tests/core/**/*Test.java
          split-total: ${{ env.total-runners }}
          split-index: ${{ matrix.runner-index }}

      - name: Run tests
        run: |
              # Store original paths in a variable
              ORIGINAL_PATHS="${{ steps.split-tests.outputs.test-suite }}"

              if [ -z "$ORIGINAL_PATHS" ]; then
                echo "No tests found to run."
                exit 1
              fi

              echo "Original file paths: $ORIGINAL_PATHS"

              # Convert file paths to the desired format using a simpler method
              TEST_CLASSES=""
              for path in $ORIGINAL_PATHS; do
                # Remove base directory path, replace slashes with dots, remove .java, format with --tests
                class_name=$(echo "$path" | sed 's|parallel-backend-tests/core/src/test/java/||; s|/|.|g; s|\.java$||')
                TEST_CLASSES="$TEST_CLASSES \"$class_name\""
              done

              # Ensure TEST_CLASSES is not empty after formatting
              if [ -z "$TEST_CLASSES" ]; then
                echo "No test classes found after formatting!"
                exit 1
              fi

              echo "Formatted test classes: ${TEST_CLASSES}"

              # Run Gradle with fully qualified test class names
              cd parallel-backend-tests/core
              chmod +x ./gradlew
              ./gradlew test --tests ${TEST_CLASSES} --warning-mode all 
